{"payload":{"tabs":[{"id":"8064c5e7-7663-42dd-bc09-d6215f0739e9","text":"//***********************************************************************************************************\n// Here are two articles to help you get started with KQL:\n// KQL reference guide - https://aka.ms/KQLguide\n// SQL - KQL conversions - https://aka.ms/sqlcheatsheet\n//***********************************************************************************************************\n\n// Use \"take\" to view a sample number of records in the table and check the data.\nYOUR_TABLE_HERE\n| take 100\n\n// See how many records are in the table.\nYOUR_TABLE_HERE\n| count\n\n// Use 'take' to view a sample number of records in the table and check the data.\nAutomotive\n| take 100 \n\n// Use 'project' and 'take' to view a sample number of records in the table and check the data.\n Automotive \n | project vendor_id, [\"Trip Distance\"] = trip_distance\n | take 10\n\n // summarize the data   \n Trips\n | summarize [\"Total Trip Distance\"] = sum(trip_distance)\n\n//Group by data\nAutomotive\n| summarize [\"Total Trip Distance\"] = sum(trip_distance) by pickup_boroname\n| project Borough = pickup_boroname, [\"Total Trip Distance\"]\n\n//Filter null\nAutomotive\n| summarize [\"Total Trip Distance\"] = sum(trip_distance) by pickup_boroname\n| project Borough = case(isempty(pickup_boroname) or isnull(pickup_boroname), \"Unidentified\", pickup_boroname), [\"Total Trip Distance\"]\n\n\n// using the sort by operators\nAutomotive\n| summarize [\"Total Trip Distance\"] = sum(trip_distance) by pickup_boroname\n| project Borough = case(isempty(pickup_boroname) or isnull(pickup_boroname), \"Unidentified\", pickup_boroname), [\"Total Trip Distance\"]\n| sort by Borough asc \n\n// order by operator has the same result as sort by\nAutomotive\n| summarize [\"Total Trip Distance\"] = sum(trip_distance) by pickup_boroname\n| project Borough = case(isempty(pickup_boroname) or isnull(pickup_boroname), \"Unidentified\", pickup_boroname), [\"Total Trip Distance\"]\n| order by Borough asc \n\n\n// let's filter our dataset immediately from the source by applying a filter directly after the table.\nAutomotive\n| where pickup_boroname == \"Manhattan\"\n| summarize [\"Total Trip Distance\"] = sum(trip_distance) by pickup_boroname\n| project Borough = case(isempty(pickup_boroname) or isnull(pickup_boroname), \"Unidentified\", pickup_boroname), [\"Total Trip Distance\"]\n| sort by Borough asc\n\n//USING T-SQL statements\n // We can use the TOP clause to limit the number of records returned\n    \n SELECT TOP 10 * from Automotive\n\n     \n // No need to use the 'project' or 'take' operators as standard T-SQL Works\n SELECT TOP 10 vendor_id, trip_distance as [Trip Distance]\n from Automotive\n\n Select sum(trip_distance) as [Total Trip Distance]\n from Automotive\n\n  SELECT pickup_boroname AS Borough, Sum(trip_distance) AS [Total Trip Distance]\n FROM Automotive\n GROUP BY pickup_boroname\n\n     \n SELECT CASE\n          WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'Unidentified'\n          ELSE pickup_boroname\n        END AS Borough,\n        SUM(trip_distance) AS [Total Trip Distance]\n FROM Automotive\n GROUP BY CASE\n            WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'Unidentified'\n            ELSE pickup_boroname\n          END;\n\n// Group by pickup_boroname and calculate the summary statistics of trip_distance\n SELECT CASE\n          WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n          ELSE pickup_boroname\n        END AS Borough,\n        SUM(trip_distance) AS [Total Trip Distance]\n FROM Automotive\n GROUP BY CASE\n            WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n            ELSE pickup_boroname\n          END\n-- Add an ORDER BY clause to sort by Borough in ascending order\n ORDER BY Borough ASC;\n\n -- Group by pickup_boroname and calculate the summary statistics of trip_distance\n SELECT CASE\n          WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n          ELSE pickup_boroname\n        END AS Borough,\n        SUM(trip_distance) AS [Total Trip Distance]\n FROM Automotive\n GROUP BY CASE\n            WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n            ELSE pickup_boroname\n          END\n -- Add a having clause due to the GROUP BY statement\n HAVING Borough = 'Manhattan'\n -- Add an ORDER BY clause to sort by Borough in ascending order\n ORDER BY Borough ASC;\n    \n\n","commandInContext":"// Group by pickup_boroname and calculate the summary statistics of trip_distance\n SELECT CASE\n          WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n          ELSE pickup_boroname\n        END AS Borough,\n        SUM(trip_distance) AS [Total Trip Distance]\n FROM Automotive\n GROUP BY CASE\n            WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n            ELSE pickup_boroname\n          END\n-- Add an ORDER BY clause to sort by Borough in ascending order\n ORDER BY Borough ASC;\n\n","executionStatus":"done","clientRequestId":"Kusto.Web.RTA.Query;34f2e7dd-7542-439b-9fae-5a5be4ca430a;59a58725-584e-444b-a773-8df0c5a899e1","entityInContext":"-22010430/9be6b612-1561-9c81-46e9-6041465100a7","commandType":"Query","commandWithoutLeadingComments":"// Group by pickup_boroname and calculate the summary statistics of trip_distance\n SELECT CASE\n          WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n          ELSE pickup_boroname\n        END AS Borough,\n        SUM(trip_distance) AS [Total Trip Distance]\n FROM Automotive\n GROUP BY CASE\n            WHEN pickup_boroname IS NULL OR pickup_boroname = '' THEN 'unidentified'\n            ELSE pickup_boroname\n          END\n-- Add an ORDER BY clause to sort by Borough in ascending order\n ORDER BY Borough ASC;\n\n","hideEmptyColumns":false,"startLineOffset":88,"cursorPosition":{"lineNumber":93,"column":15}}],"tabInContext":"8064c5e7-7663-42dd-bc09-d6215f0739e9","connections":{"trd-fasvz8r8vmtx5qsm1p.z3":{"clusterType":"Engine","name":"trd-fasvz8r8vmtx5qsm1p.z3","connectionString":"https://trd-fasvz8r8vmtx5qsm1p.z3.kusto.fabric.microsoft.com","initialCatalog":"a7b09fb9-c0ac-4d11-9275-99ee3f0324e7","databases":{"trd-fasvz8r8vmtx5qsm1p.z3/a7b09fb9-c0ac-4d11-9275-99ee3f0324e7":{"id":"trd-fasvz8r8vmtx5qsm1p.z3/a7b09fb9-c0ac-4d11-9275-99ee3f0324e7","name":"a7b09fb9-c0ac-4d11-9275-99ee3f0324e7","prettyName":"MyStockData","fetchState":"notStarted","fetchStateError":"","tables":{},"functions":{},"entityGroups":{},"accessMode":"ReadWrite","minorVersion":15,"majorVersion":13}},"id":"trd-fasvz8r8vmtx5qsm1p.z3","fetchState":"done","fetchStateError":"","tooBigToCache":true,"serviceOffering":"Trident"},"-22010430":{"clusterType":"Engine","name":"-22010430","connectionString":"","initialCatalog":"9be6b612-1561-9c81-46e9-6041465100a7","databases":{"-22010430/9be6b612-1561-9c81-46e9-6041465100a7":{"id":"-22010430/9be6b612-1561-9c81-46e9-6041465100a7","name":"9be6b612-1561-9c81-46e9-6041465100a7","prettyName":"TaxiData","fetchState":"notStarted","fetchStateError":"","tables":{},"functions":{},"entityGroups":{},"accessMode":"ReadWrite","minorVersion":13,"majorVersion":13}},"id":"-22010430","fetchState":"done","fetchStateError":"","tooBigToCache":true,"serviceOffering":"Trident"}}}}