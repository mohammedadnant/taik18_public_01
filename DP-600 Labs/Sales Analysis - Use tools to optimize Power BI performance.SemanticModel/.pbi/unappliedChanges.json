{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "SqlServerInstance",
      "lineageTag": "0318d784-2471-4fb7-a6c9-ba85102f4709",
      "text": [
        "\"localhost\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Unknown",
      "isHidden": false
    },
    {
      "name": "SqlServerDatabase",
      "lineageTag": "4acfd32c-9d8d-46aa-99ce-406013808278",
      "text": [
        "\"AdventureWorksDW2022\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Unknown",
      "isHidden": false
    },
    {
      "name": "Culture",
      "lineageTag": "b5a3943e-eaff-4d2f-b6d0-f7ca0e3c1c82",
      "description": "Used to format month names in the Date query.",
      "text": [
        "\"en-US\" meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Unknown",
      "isHidden": false
    },
    {
      "name": "Category",
      "lineageTag": "eb9f7b26-6e9a-41e6-bf3e-8b89a0654734",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimProductCategory = Source{[Schema=\"dbo\",Item=\"DimProductCategory\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimProductCategory,{\"ProductCategoryKey\", \"EnglishProductCategoryName\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"EnglishProductCategoryName\", \"Category\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimProductCategory = Source{[Schema=\\\"dbo\\\",Item=\\\"DimProductCategory\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_DimProductCategory,{\\\"ProductCategoryKey\\\", \\\"EnglishProductCategoryName\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Other Columns\\\",{{\\\"EnglishProductCategoryName\\\", \\\"Category\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Customer",
      "lineageTag": "44014a76-c00c-4ade-ba49-f8414308624e",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimCustomer = Source{[Schema=\"dbo\",Item=\"DimCustomer\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimCustomer,{\"CustomerKey\", \"CustomerAlternateKey\", \"FirstName\", \"LastName\", \"DimGeography\"}),",
        "    #\"Expanded DimGeography\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"DimGeography\", {\"City\", \"StateProvinceName\", \"EnglishCountryRegionName\", \"PostalCode\"}, {\"City\", \"StateProvinceName\", \"EnglishCountryRegionName\", \"PostalCode\"}),",
        "    #\"Merged Columns\" = Table.CombineColumns(#\"Expanded DimGeography\",{\"FirstName\", \"LastName\"},Combiner.CombineTextByDelimiter(\" \", QuoteStyle.None),\"Customer\"),",
        "    #\"Add NA Row\" = Table.InsertRows(#\"Merged Columns\", 0, {[CustomerKey = -1, CustomerAlternateKey = \"[Not Applicable]\", Customer = \"[Not Applicable]\", City = \"[Not Applicable]\", StateProvinceName =\"[Not Applicable]\", EnglishCountryRegionName =\"[Not Applicable]\", PostalCode =\"[Not Applicable]\"]}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Add NA Row\",{{\"CustomerAlternateKey\", \"Customer ID\"}, {\"StateProvinceName\", \"State-Province\"}, {\"EnglishCountryRegionName\", \"Country-Region\"}, {\"PostalCode\", \"Postal Code\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimCustomer = Source{[Schema=\\\"dbo\\\",Item=\\\"DimCustomer\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_DimCustomer,{\\\"CustomerKey\\\", \\\"CustomerAlternateKey\\\", \\\"FirstName\\\", \\\"LastName\\\", \\\"DimGeography\\\"}),\\n    #\\\"Expanded DimGeography\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"DimGeography\\\", {\\\"City\\\", \\\"StateProvinceName\\\", \\\"EnglishCountryRegionName\\\", \\\"PostalCode\\\"}, {\\\"City\\\", \\\"StateProvinceName\\\", \\\"EnglishCountryRegionName\\\", \\\"PostalCode\\\"}),\\n    #\\\"Merged Columns\\\" = Table.CombineColumns(#\\\"Expanded DimGeography\\\",{\\\"FirstName\\\", \\\"LastName\\\"},Combiner.CombineTextByDelimiter(\\\" \\\", QuoteStyle.None),\\\"Customer\\\"),\\n    #\\\"Add NA Row\\\" = Table.InsertRows(#\\\"Merged Columns\\\", 0, {[CustomerKey = -1, CustomerAlternateKey = \\\"[Not Applicable]\\\", Customer = \\\"[Not Applicable]\\\", City = \\\"[Not Applicable]\\\", StateProvinceName =\\\"[Not Applicable]\\\", EnglishCountryRegionName =\\\"[Not Applicable]\\\", PostalCode =\\\"[Not Applicable]\\\"]}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Add NA Row\\\",{{\\\"CustomerAlternateKey\\\", \\\"Customer ID\\\"}, {\\\"StateProvinceName\\\", \\\"State-Province\\\"}, {\\\"EnglishCountryRegionName\\\", \\\"Country-Region\\\"}, {\\\"PostalCode\\\", \\\"Postal Code\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Date",
      "lineageTag": "dfae5c96-c077-45f5-8536-da6e31bd0bc8",
      "description": "Filters the Sales table using sales order date",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimDate = Source{[Schema=\"dbo\",Item=\"DimDate\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimDate,{\"DateKey\", \"FullDateAlternateKey\", \"DayNumberOfMonth\", \"MonthNumberOfYear\", \"CalendarYear\", \"FiscalQuarter\", \"FiscalYear\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"FullDateAlternateKey\", \"Date\"}, {\"FiscalYear\", \"Fiscal Year\"}}),",
        "    #\"Added FY Prefix\" = Table.TransformColumns(#\"Renamed Columns\", {{\"Fiscal Year\", each \"FY\" & Text.From(_, \"en-US\"), type text}}),",
        "    #\"Added Fiscal Quarter\" = Table.AddColumn(#\"Added FY Prefix\", \"Fiscal Quarter\", each [Fiscal Year] & \" Q\" & Number.ToText([FiscalQuarter])),",
        "    #\"Added Month\" = Table.AddColumn(#\"Added Fiscal Quarter\", \"Month\", each (Number.ToText([CalendarYear]) & \" \" & Date.ToText([Date], \"MMM\", Culture)), type text),",
        "    #\"Added Full Date\" = Table.AddColumn(#\"Added Month\", \"Full Date\", each [Month] & \", \" & Text.PadStart(Number.ToText([DayNumberOfMonth]), 2, \"0\")),",
        "    #\"Added MonthKey\" = Table.AddColumn(#\"Added Full Date\", \"MonthKey\", each ([CalendarYear] * 100) + [MonthNumberOfYear]),",
        "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Added MonthKey\",{\"DateKey\", \"Date\", \"Fiscal Year\", \"Fiscal Quarter\", \"Month\", \"Full Date\", \"MonthKey\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns1\",{{\"Fiscal Quarter\", type text}, {\"Month\", type text}, {\"Full Date\", type text}, {\"MonthKey\", Int64.Type}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimDate = Source{[Schema=\\\"dbo\\\",Item=\\\"DimDate\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_DimDate,{\\\"DateKey\\\", \\\"FullDateAlternateKey\\\", \\\"DayNumberOfMonth\\\", \\\"MonthNumberOfYear\\\", \\\"CalendarYear\\\", \\\"FiscalQuarter\\\", \\\"FiscalYear\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Other Columns\\\",{{\\\"FullDateAlternateKey\\\", \\\"Date\\\"}, {\\\"FiscalYear\\\", \\\"Fiscal Year\\\"}}),\\n    #\\\"Added FY Prefix\\\" = Table.TransformColumns(#\\\"Renamed Columns\\\", {{\\\"Fiscal Year\\\", each \\\"FY\\\" & Text.From(_, \\\"en-US\\\"), type text}}),\\n    #\\\"Added Fiscal Quarter\\\" = Table.AddColumn(#\\\"Added FY Prefix\\\", \\\"Fiscal Quarter\\\", each [Fiscal Year] & \\\" Q\\\" & Number.ToText([FiscalQuarter])),\\n    #\\\"Added Month\\\" = Table.AddColumn(#\\\"Added Fiscal Quarter\\\", \\\"Month\\\", each (Number.ToText([CalendarYear]) & \\\" \\\" & Date.ToText([Date], \\\"MMM\\\", Culture)), type text),\\n    #\\\"Added Full Date\\\" = Table.AddColumn(#\\\"Added Month\\\", \\\"Full Date\\\", each [Month] & \\\", \\\" & Text.PadStart(Number.ToText([DayNumberOfMonth]), 2, \\\"0\\\")),\\n    #\\\"Added MonthKey\\\" = Table.AddColumn(#\\\"Added Full Date\\\", \\\"MonthKey\\\", each ([CalendarYear] * 100) + [MonthNumberOfYear]),\\n    #\\\"Removed Other Columns1\\\" = Table.SelectColumns(#\\\"Added MonthKey\\\",{\\\"DateKey\\\", \\\"Date\\\", \\\"Fiscal Year\\\", \\\"Fiscal Quarter\\\", \\\"Month\\\", \\\"Full Date\\\", \\\"MonthKey\\\"}),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Removed Other Columns1\\\",{{\\\"Fiscal Quarter\\\", type text}, {\\\"Month\\\", type text}, {\\\"Full Date\\\", type text}, {\\\"MonthKey\\\", Int64.Type}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Product",
      "lineageTag": "772483b7-4b11-4624-9fde-96dc9be364c1",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimProduct = Source{[Schema=\"dbo\",Item=\"DimProduct\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_DimProduct, each ([FinishedGoodsFlag] = true)),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"ProductKey\", \"ProductAlternateKey\", \"ProductSubcategoryKey\", \"EnglishProductName\", \"StandardCost\", \"Color\", \"ListPrice\", \"ModelName\"})",
        "in",
        "    #\"Removed Other Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimProduct = Source{[Schema=\\\"dbo\\\",Item=\\\"DimProduct\\\"]}[Data],\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(dbo_DimProduct, each ([FinishedGoodsFlag] = true)),\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(#\\\"Filtered Rows\\\",{\\\"ProductKey\\\", \\\"ProductAlternateKey\\\", \\\"ProductSubcategoryKey\\\", \\\"EnglishProductName\\\", \\\"StandardCost\\\", \\\"Color\\\", \\\"ListPrice\\\", \\\"ModelName\\\"})\\nin\\n    #\\\"Removed Other Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Reseller",
      "lineageTag": "c2bc8824-0449-46be-947b-1c0e856226f4",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimReseller = Source{[Schema=\"dbo\",Item=\"DimReseller\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimReseller,{\"ResellerKey\", \"ResellerAlternateKey\", \"BusinessType\", \"ResellerName\", \"DimGeography\"}),",
        "    #\"Expanded DimGeography\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"DimGeography\", {\"City\", \"StateProvinceName\", \"EnglishCountryRegionName\", \"PostalCode\"}, {\"City\", \"StateProvinceName\", \"EnglishCountryRegionName\", \"PostalCode\"}),",
        "    #\"Add NA Row\" = Table.InsertRows(#\"Expanded DimGeography\", 0, {[ResellerKey = -1, ResellerAlternateKey = \"[Not Applicable]\", BusinessType = \"[Not Applicable]\", ResellerName = \"[Not Applicable]\", City = \"[Not Applicable]\", StateProvinceName =\"[Not Applicable]\", EnglishCountryRegionName =\"[Not Applicable]\", PostalCode =\"[Not Applicable]\"]}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Add NA Row\",{{\"ResellerAlternateKey\", \"Reseller ID\"}, {\"BusinessType\", \"Business Type\"}, {\"ResellerName\", \"Reseller\"}, {\"StateProvinceName\", \"State-Province\"}, {\"EnglishCountryRegionName\", \"Country-Region\"}, {\"PostalCode\", \"Postal Code\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimReseller = Source{[Schema=\\\"dbo\\\",Item=\\\"DimReseller\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_DimReseller,{\\\"ResellerKey\\\", \\\"ResellerAlternateKey\\\", \\\"BusinessType\\\", \\\"ResellerName\\\", \\\"DimGeography\\\"}),\\n    #\\\"Expanded DimGeography\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"DimGeography\\\", {\\\"City\\\", \\\"StateProvinceName\\\", \\\"EnglishCountryRegionName\\\", \\\"PostalCode\\\"}, {\\\"City\\\", \\\"StateProvinceName\\\", \\\"EnglishCountryRegionName\\\", \\\"PostalCode\\\"}),\\n    #\\\"Add NA Row\\\" = Table.InsertRows(#\\\"Expanded DimGeography\\\", 0, {[ResellerKey = -1, ResellerAlternateKey = \\\"[Not Applicable]\\\", BusinessType = \\\"[Not Applicable]\\\", ResellerName = \\\"[Not Applicable]\\\", City = \\\"[Not Applicable]\\\", StateProvinceName =\\\"[Not Applicable]\\\", EnglishCountryRegionName =\\\"[Not Applicable]\\\", PostalCode =\\\"[Not Applicable]\\\"]}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Add NA Row\\\",{{\\\"ResellerAlternateKey\\\", \\\"Reseller ID\\\"}, {\\\"BusinessType\\\", \\\"Business Type\\\"}, {\\\"ResellerName\\\", \\\"Reseller\\\"}, {\\\"StateProvinceName\\\", \\\"State-Province\\\"}, {\\\"EnglishCountryRegionName\\\", \\\"Country-Region\\\"}, {\\\"PostalCode\\\", \\\"Postal Code\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Sales",
      "lineageTag": "7c16d677-69ab-40dd-947d-4c4e5956af1a",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_vFactSales = Source{[Schema=\"dbo\",Item=\"vFactSales\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_vFactSales,{\"SalesOrderLineKey\", \"ResellerKey\", \"CustomerKey\", \"ProductKey\", \"OrderDateKey\", \"DueDateKey\", \"SalesTerritoryKey\", \"TotalProductCost\", \"SalesAmount\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"SalesAmount\", \"Sales Amount\"}, {\"TotalProductCost\", \"Total Product Cost\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_vFactSales = Source{[Schema=\\\"dbo\\\",Item=\\\"vFactSales\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_vFactSales,{\\\"SalesOrderLineKey\\\", \\\"ResellerKey\\\", \\\"CustomerKey\\\", \\\"ProductKey\\\", \\\"OrderDateKey\\\", \\\"DueDateKey\\\", \\\"SalesTerritoryKey\\\", \\\"TotalProductCost\\\", \\\"SalesAmount\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Other Columns\\\",{{\\\"SalesAmount\\\", \\\"Sales Amount\\\"}, {\\\"TotalProductCost\\\", \\\"Total Product Cost\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Sales Order",
      "lineageTag": "fadb978c-49d2-4c2a-862c-ed2200d6abb6",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_vFactSales = Source{[Schema=\"dbo\",Item=\"vFactSales\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_vFactSales,{\"Channel\", \"SalesOrderLineKey\", \"SalesOrderNumber\", \"SalesOrderLineNumber\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"SalesOrderNumber\", \"Sales Order\"}}),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Sales Order Line\", each [Sales Order] & \" - \" & Text.PadStart(Number.ToText([SalesOrderLineNumber]), 2, \"0\")),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom\",{{\"Sales Order Line\", type text}}),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"SalesOrderLineNumber\"})",
        "in",
        "    #\"Removed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_vFactSales = Source{[Schema=\\\"dbo\\\",Item=\\\"vFactSales\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_vFactSales,{\\\"Channel\\\", \\\"SalesOrderLineKey\\\", \\\"SalesOrderNumber\\\", \\\"SalesOrderLineNumber\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Other Columns\\\",{{\\\"SalesOrderNumber\\\", \\\"Sales Order\\\"}}),\\n    #\\\"Added Custom\\\" = Table.AddColumn(#\\\"Renamed Columns\\\", \\\"Sales Order Line\\\", each [Sales Order] & \\\" - \\\" & Text.PadStart(Number.ToText([SalesOrderLineNumber]), 2, \\\"0\\\")),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Added Custom\\\",{{\\\"Sales Order Line\\\", type text}}),\\n    #\\\"Removed Columns\\\" = Table.RemoveColumns(#\\\"Changed Type\\\",{\\\"SalesOrderLineNumber\\\"})\\nin\\n    #\\\"Removed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Sales Territory",
      "lineageTag": "6dbcfa74-2f77-4b25-9e7f-b9a93276adae",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimSalesTerritory = Source{[Schema=\"dbo\",Item=\"DimSalesTerritory\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimSalesTerritory,{\"SalesTerritoryKey\", \"SalesTerritoryRegion\", \"SalesTerritoryCountry\", \"SalesTerritoryGroup\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"SalesTerritoryRegion\", \"Region\"}, {\"SalesTerritoryCountry\", \"Country\"}, {\"SalesTerritoryGroup\", \"Group\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimSalesTerritory = Source{[Schema=\\\"dbo\\\",Item=\\\"DimSalesTerritory\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_DimSalesTerritory,{\\\"SalesTerritoryKey\\\", \\\"SalesTerritoryRegion\\\", \\\"SalesTerritoryCountry\\\", \\\"SalesTerritoryGroup\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Other Columns\\\",{{\\\"SalesTerritoryRegion\\\", \\\"Region\\\"}, {\\\"SalesTerritoryCountry\\\", \\\"Country\\\"}, {\\\"SalesTerritoryGroup\\\", \\\"Group\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Subcategory",
      "lineageTag": "67e0e3b4-d60b-4347-b121-90dee95d124c",
      "text": [
        "let",
        "    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),",
        "    dbo_DimProductSubcategory = Source{[Schema=\"dbo\",Item=\"DimProductSubcategory\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimProductSubcategory,{\"ProductSubcategoryKey\", \"EnglishProductSubcategoryName\", \"ProductCategoryKey\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"EnglishProductSubcategoryName\", \"Subcategory\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(SqlServerInstance, SqlServerDatabase),\\n    dbo_DimProductSubcategory = Source{[Schema=\\\"dbo\\\",Item=\\\"DimProductSubcategory\\\"]}[Data],\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(dbo_DimProductSubcategory,{\\\"ProductSubcategoryKey\\\", \\\"EnglishProductSubcategoryName\\\", \\\"ProductCategoryKey\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Other Columns\\\",{{\\\"EnglishProductSubcategoryName\\\", \\\"Subcategory\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    }
  ],
  "queryGroups": [],
  "culture": "en-US",
  "firewallEnabled": true
}